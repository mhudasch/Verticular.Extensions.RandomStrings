name: Verticular.AllDotNet.CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core (3.1)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Setup .NET Core (2.2)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.805

    - name: Setup .NET Full Framework
      uses: warrenbuckley/Setup-MSBuild@v1

    - id: bootstrap
      name: Bootstrap variables
      shell: pwsh
      run: |
        $gb = "${{ github.ref }}".Replace("refs/heads/", "");
        $b = [int]${{ github.run_number }};
        $bn = [datetime]::Now.Date.ToString("yyyyMMdd") + "." + [string]::Format("{0:000}", $b);
        Write-Host "::set-output name=commit::${{ github.sha }}"
        Write-Host "::set-output name=branchName::$gb"
        Write-Host "::set-output name=buildNumber::$bn"

    - name: Show variables
      shell: pwsh
      run: |
        Write-Host "Commit: ${{ steps.bootstrap.outputs.commit }}"
        Write-Host "Branch: ${{ steps.bootstrap.outputs.branchName }}"
        Write-Host "Build: ${{ steps.bootstrap.outputs.buildNumber }}"
      
    - name: Install dependencies
      shell: pwsh
      run: dotnet restore --packages ./packages --verbosity minimal --no-cache --ignore-failed-sources
      env: 
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
   
    - name: Build (bin)
      run: dotnet build --configuration CI --no-restore --verbosity minimal --no-incremental -p:GitRevisionNumber="${{ steps.bootstrap.outputs.commit }}" -p:GitBranchName="${{ steps.bootstrap.outputs.branchName }}" -p:BuildNumber="${{ steps.bootstrap.outputs.buildNumber }}" -p:CIBuilder="VSTS" -p:AppendRuntimeToOutputPath=true --runtime win
    
    - name: Build (for pack)
      run: dotnet build --configuration CI --no-restore --verbosity minimal --no-incremental -p:GitRevisionNumber="${{ steps.bootstrap.outputs.commit }}" -p:GitBranchName="${{ steps.bootstrap.outputs.branchName }}" -p:BuildNumber="${{ steps.bootstrap.outputs.buildNumber }}" -p:CIBuilder="VSTS" -p:AppendRuntimeToOutputPath=false --runtime win
    
    - name: Test
      run: dotnet test --configuration CI --no-restore --no-build --verbosity normal --logger trx --collect "Code Coverage" --results-directory "$pwd/TestResults" --runtime win

    - name: Pack nuget packages
      run: dotnet pack --configuration CI --no-build --verbosity minimal --servicable --output "$pwd/nuget" -p:GitRevisionNumber="${{ steps.bootstrap.outputs.commit }}" -p:GitBranchName="${{ steps.bootstrap.outputs.branchName }}" -p:BuildNumber="${{ steps.bootstrap.outputs.buildNumber }}" -p:CIBuilder="VSTS" -p:AppendRuntimeToOutputPath=false --runtime win

    
  sonar:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - name: Setup .NET Core (3.1)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Sonarscanner for dotnet
      uses: Secbyte/dotnet-sonarscanner@v2.2
      with:
        buildCommand: dotnet build --configuration CI --no-restore --verbosity minimal --no-incremental -p:GitRevisionNumber="${{ steps.bootstrap.outputs.commit }}" -p:GitBranchName="${{ steps.bootstrap.outputs.branchName }}" -p:BuildNumber="${{ steps.bootstrap.outputs.buildNumber }}" -p:CIBuilder="VSTS" -p:AppendRuntimeToOutputPath=true --runtime win
        testCommand: dotnet test --configuration CI --no-restore --no-build --verbosity normal --logger trx --collect "Code Coverage" --results-directory "$pwd/TestResults" --runtime win
        projectKey: mhudasch_verticular.extensions.randomstrings
        projectName: verticular.extensions.randomstrings
        sonarOrganisation: mhudasch-github
        beginArguments: >
            /d:sonar.verbose="true"
            /d:sonar.cs.opencover.reportsPaths='"/path/to/coverage.xml","/path/to/coverage.2.xml"'
            /d:sonar.coverage.exclusions='"**/*.cs","**/*.md"'
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
